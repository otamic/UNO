UNO --- OOC实践

简单而言：利用C语言的存储特性和无类型指针操作完成继承和多态;利用头文件和源文件的管理实现封装
参考：Object-oriented Programming with ANSI-C  by  Axel-Tobias Schreiner

OOC规范：

struct 作为一个类
在struct第一个struct变量作为父类（至少要继承class类）
定义全局变量作为类的唯一标识符
为类实现构造，析构函数
使用new，delete函数创建
具体见代码

UNO游戏简介：

UNO牌分三类牌：普通牌(76张)、功能牌(24张)、万能牌(8张)。总牌数为108张。
●普通牌(Number Card)：
普通牌由红、黄、蓝、绿4种颜色组成，每种颜色都拥有数字为0~9的牌，每种颜色有19张：1~9数字牌每种颜色各两张，0数字牌每种颜色只有一张。这些牌上的数字将成为结束时记分的依据。
●功能牌(Action Card)：
功能牌也由红、黄、蓝、绿4种颜色组成，其名称分别为"跳过(Skip)"、"反转(Reverse)"、"+2(Draw Two)"。
Skip：跳过。打出“跳过”牌后，你的下家将停止出牌，轮到再下家出牌。
反转：打出反转牌后，整个出牌时针顺序将变换，如逆时针顺序变为顺时针顺序 (即假设有A，B，C，D四个玩家，本来的出牌顺序应该为A→B→C→D，在打出此牌之后，顺序变为D→C→B→A)。
+2：打出+2后，下家将被罚摸2张牌，并不能再出牌。
●万能牌(Action Card)：
万能牌又称为黑牌、王牌，在UNO游戏中占很重要的地位，分为变色(Wild)和+4(Wild Draw 4)两种：
变色)：打出变色牌后，不论上一张牌是什么颜色，都可以随意指定下家出牌的颜色。该牌即使在你手中有其它可出的牌时也可以打出(区别于+4)。
+4(Wild Draw Four)：+4的使用比较复杂(可能与大多数人理解不一样)。+4是整个游戏中最强的卡牌。打出+4后，你可以随意指定下家出牌的颜色，同时下家需从牌堆中罚摸4张牌，且不能再出牌。
但是，+4只有在自己手中没有与弃牌堆上一张牌同颜色(不包括同数字或功能)才能合法出牌。下家有权利质疑你的出牌是否合法，这时你得把手中的牌给他看(称作检举)。如果你合法出牌，那么他在被罚抽4张的同时，还要再从牌堆中抽两张作为额外惩罚；反之，你将因违规而罚抽4张牌，下家则无需抽牌。下家无论是否检举出+4的人，他都要被跳过，即下一个出牌者是再下家。
UNO的获胜条件是：先将自己手上的牌全部打完


UNO实现：
运行游戏，有文字提示牌面和场上信息
输入数字标示牌